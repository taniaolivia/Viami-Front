// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: "${dotenv.env['GOOGLE_SERVICE_API_KEY_WEB']}",
    appId: "${dotenv.env['GOOGLE_SERVICE_APP_ID_WEB']}",
    messagingSenderId: "${dotenv.env['GOOGLE_SERVICE_MESSAGING_SENDER_ID']}",
    projectId: "${dotenv.env['GOOGLE_SERVICE_PROJECT_ID']}",
    authDomain: "${dotenv.env['GOOGLE_SERVICE_AUTH_DOMAIN']}",
    storageBucket: "${dotenv.env['GOOGLE_SERVICE_STORAGE_BUCKET']}",
    measurementId: "${dotenv.env['GOOGLE_SERVICE_MEASUREMENT_ID']}",
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: "${dotenv.env['GOOGLE_SERVICE_API_KEY_ANDROID']}",
    appId: "${dotenv.env['GOOGLE_SERVICE_APP_ID_ANDROID']}",
    messagingSenderId: "${dotenv.env['GOOGLE_SERVICE_MESSAGING_SENDER_ID']}",
    projectId: "${dotenv.env['GOOGLE_SERVICE_PROJECT_ID']}",
    storageBucket: "${dotenv.env['GOOGLE_SERVICE_STORAGE_BUCKET']}",
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: "${dotenv.env['GOOGLE_SERVICE_API_KEY_IOS']}",
    appId: "${dotenv.env['GOOGLE_SERVICE_APP_ID_IOS']}",
    messagingSenderId: "${dotenv.env['GOOGLE_SERVICE_MESSAGING_SENDER_ID']}",
    projectId: "${dotenv.env['GOOGLE_SERVICE_PROJECT_ID']}",
    storageBucket: "${dotenv.env['GOOGLE_SERVICE_STORAGE_BUCKET']}",
    iosBundleId: "${dotenv.env['GOOGLE_SERVICE_IOS_BUNDLE_ID']}",
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: "${dotenv.env['GOOGLE_SERVICE_API_KEY_MACOS']}",
    appId: "${dotenv.env['GOOGLE_SERVICE_APP_ID_MACOS']}",
    messagingSenderId: "${dotenv.env['GOOGLE_SERVICE_MESSAGING_SENDER_ID']}",
    projectId: "${dotenv.env['GOOGLE_SERVICE_PROJECT_ID']}",
    storageBucket: "${dotenv.env['GOOGLE_SERVICE_STORAGE_BUCKET']}",
    iosBundleId: "${dotenv.env['GOOGLE_SERVICE_IOS_BUNDLE_ID']}",
  );
}
